<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Hello Friend</title>
    <link>/posts/</link>
    <description>Recent content in Posts on Hello Friend</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Nov 2022 16:11:16 +0300</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My First Post</title>
      <link>/posts/my-first-post/</link>
      <pubDate>Fri, 04 Nov 2022 16:11:16 +0300</pubDate>
      
      <guid>/posts/my-first-post/</guid>
      <description>Hello!</description>
    </item>
    
    <item>
      <title>Fundementals of software architecture review</title>
      <link>/posts/fundementals-of-software-architecture-review/</link>
      <pubDate>Fri, 04 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/fundementals-of-software-architecture-review/</guid>
      <description>book by Mark Richards, Neal Ford
When reading about architecture readers must keep in mind that, like much art, it can only be understood in context.
Everything in software architecture is a trade-off.
First Law of Software Architecture If an architect thinks they have discovered something that isn’t a trade-off, more likely they just haven’t identified the trade-off yet. Why is more important than how.
Second Law of Software Architecture Never shoot for the best architecture, but rather the least worst architecture.</description>
    </item>
    
  </channel>
</rss>
