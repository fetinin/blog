<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Denis&#39; Digital Garden</title>
    <link>blog.fetinin.dev/</link>
    <description>Recent content on Denis&#39; Digital Garden</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="blog.fetinin.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fundementals of software architecture review</title>
      <link>blog.fetinin.dev/posts/fundementals-of-software-architecture-review/</link>
      <pubDate>Fri, 04 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>blog.fetinin.dev/posts/fundementals-of-software-architecture-review/</guid>
      <description>Fundementals of software architecture is a book by Mark Richards, Neal Ford.
This article is mostly just a bunch of quotes collected from it. I&amp;rsquo;ll take some time to process them and update this article.
When reading about architecture readers must keep in mind that, like much art, it can only be understood in context.
Everything in software architecture is a trade-off.
First Law of Software Architecture If an architect thinks they have discovered something that isn’t a trade-off, more likely they just haven’t identified the trade-off yet.</description>
    </item>
    
    <item>
      <title></title>
      <link>blog.fetinin.dev/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>blog.fetinin.dev/about/</guid>
      <description>Hi, I&amp;rsquo;m Denis 💁🏻‍♂️💻 Golang and Python developer who secretly love frontend but most of the time work as a backend developer at Lamoda.
I have experience with microservices and event-driven architecture. Work in E-commerce on apps and website backend and 20+ microservices that provide discounts, catalog navigation, pricing, checkout, cart and other for our customers.
Like to work in a small to medium teams and help understand business requirements, plan and document architecture, decompose tasks, code and get things done.</description>
    </item>
    
  </channel>
</rss>
